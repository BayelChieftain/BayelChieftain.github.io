{"version":3,"sources":["componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogsItem/DialogsItem.module.css","componets/Dialogs/DialogsItem/DialogsItem.jsx","componets/Dialogs/Message/Messages.jsx","componets/Dialogs/Dialogs.jsx","componets/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialog","DialogItem","props","path","id","React","createElement","className","c","NavLink","to","name","Messages","message","massage","Dialog","state","messagesPages","dialogElements","dialogData","map","messageElements","messagesData","m","newMessageBody","isAuth","Navigate","dialogsItems","messages","onChange","e","body","target","value","updateNewMessageBody","placeholder","onClick","sendMessage","compose","connect","dispatch","updateNewMessageBodyCreator","sendMessageCreator","withAuthRedirect"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,8CCAlBF,EAAAC,QAAA,CAAkBC,QAAA,6BAAAC,OAAA,2ICeHC,EAZI,SAACC,GAEhB,IAAIC,EAAO,WAAaD,EAAME,GAE9B,OACIC,IAAAC,cAAA,OAAKC,UAAWC,IAAER,QACXK,IAAAC,cAACG,IAAO,CAACC,GAAIP,GAAM,IAAED,EAAMS,KAAK,OCEhCC,EANE,SAACV,GACd,OACIG,IAAAC,cAAA,OAAKC,UAAWC,IAAEK,SAAUX,EAAMY,iBCsC3BC,EAtCA,SAACb,GACZ,IAAIc,EAAQd,EAAMe,cAEdC,EAAiBF,EAAMG,WACtBC,IAAK,SAAApB,GAAM,OAAIK,IAAAC,cAACL,EAAU,CAACU,KAAMX,EAAOW,KAAMP,GAAIJ,EAAOI,OAE1DiB,EAAkBL,EAAMM,aACvBF,IAAK,SAAAG,GAAC,OAAIlB,IAAAC,cAACM,EAAQ,CAAEE,QAASS,EAAEV,YAEjCW,EAAiBR,EAAMQ,eAY3B,OAAqB,IAAjBtB,EAAMuB,OAA0BpB,IAAAC,cAACoB,IAAQ,CAAChB,GAAI,WAElDL,IAAAC,cAAA,OAAKC,UAAWC,IAAET,SACdM,IAAAC,cAAA,OAAKC,UAAWC,IAAEmB,cACbT,GAILb,IAAAC,cAAA,OAAKC,UAAWC,IAAEoB,UACfvB,IAAAC,cAAA,WAAMe,GACNhB,IAAAC,cAAA,WAAK,IAACD,IAAAC,cAAA,YAAWuB,SAfL,SAACC,GACjB,IAAIC,EAAOD,EAAEE,OAAOC,MACpB/B,EAAMgC,qBAAqBH,IAaoBE,MAAOT,EAAgBW,YAAY,uBAAsB,KACpG9B,IAAAC,cAAA,WAAK,MAAGD,IAAAC,cAAA,UAAQ8B,QApBC,WACpBlC,EAAMmC,gBAmB2C,oCCf1CC,sBACXC,YAlBkB,SAACvB,GACnB,MAAO,CACHC,cAAeD,EAAMC,gBAGJ,SAACuB,GACtB,MAAO,CACHN,qBAAsB,SAACH,GAClBS,EAASC,YAA4BV,KAE1CM,YAAa,WACRG,EAAUE,mBAQnBC,IAFWL,CAGbvB","file":"static/js/1.9eb5b0d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__W89pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsItem_dialogs__2Ws4O\",\"dialog\":\"DialogsItem_dialog__1yEom\"};","import React from \"react\";\r\nimport c from './DialogsItem.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    \r\n    let path = \"/dialog/\" + props.id;\r\n    \r\n    return (\r\n        <div className={c.dialog}>\r\n               <NavLink to={path}> {props.name} </NavLink>\r\n            </div>\r\n    )\r\n\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport c from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={c.message}>{props.massage}</div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport c from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport Messages from \"./Message/Messages\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    let state = props.messagesPages;\r\n \r\n    let dialogElements = state.dialogData\r\n        .map( dialog => <DialogItem name={dialog.name} id={dialog.id}/>)\r\n\r\n    let messageElements = state.messagesData\r\n        .map( m => <Messages  massage={m.message}/>);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n  \r\n   \r\n    let onSendMesageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n    \r\n    let onPostChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    }\r\n\r\n    if (props.isAuth === false)  return <Navigate to={\"/login\"} />\r\n    return (\r\n    <div className={c.dialogs}>\r\n        <div className={c.dialogsItems}>\r\n            {dialogElements} \r\n               \r\n        </div>\r\n\r\n        <div className={c.messages}>\r\n           <div>{messageElements}</div> \r\n           <div> <textarea  onChange={ onPostChange } value={newMessageBody} placeholder=\"Enter your message\"/> </div>\r\n           <div>   <button onClick={ onSendMesageClick }>SEND</button></div>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../redux/dialogs-reducer\";\r\nimport Dialog from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPages: state.messagesPages\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n             dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n             dispatch( sendMessageCreator() )\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialog);"],"sourceRoot":""}