{"version":3,"sources":["componets/Profile/ProfileItem/ProfileInfo.module.css","componets/Profile/MypostsDir/MyPosts.module.css","componets/Profile/MypostsDir/Post.module.css","componets/Profile/ProfileItem/ProfileStatusWithHooks.jsx","componets/Profile/ProfileItem/ProfileInfo.jsx","componets/Profile/MypostsDir/Post.jsx","componets/Profile/MypostsDir/MyPosts2.jsx","componets/Profile/MypostsDir/MyPostCotainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","discrpBlock","statusStyle","statusText","PostBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","React","createElement","className","C","f","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","photos","large","Preloader","Post","c","Message","MyPost2","memo","postElements","postData","map","post","message","newPostElement","createRef","text","current","updateNewPostText","ref","newPostText","onClick","addPost","MyPostContainer","connect","state","profilePages","dispatch","action","updateNewPostTextCreator","addPostCreator","Profile","store","withRouter","Children","match","params","useParams","Object","assign","ProfileContainer","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","userId","getUserProfile","getStatus","prevProps","prevState","setState","Component","compose"],"mappings":"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","file":"static/js/2.3cefd817.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discrpBlock\":\"ProfileInfo_discrpBlock__3kWsN\",\"statusStyle\":\"ProfileInfo_statusStyle__uF7lG\",\"statusText\":\"ProfileInfo_statusText__1Ls0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__jEtAp\",\"posts\":\"MyPosts_posts__2LCOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__353Ya\"};","import React, { useEffect, useState } from \"react\";\r\nimport C from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect( () => {\r\n    setStatus(props.status)\r\n   }, [props.status])\r\n  \r\n   const actitedEditMode = () => {\r\n    setEditMode(true)\r\n   };\r\n\r\n   const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n   };\r\n\r\n   const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n   };\r\n\r\n    return  (\r\n    <div className={C.f}>\r\n        { !editMode && \r\n            <div className={C.statusStyle}>\r\n              <h4>Status:</h4>  <div className={C.statusText} onDoubleClick={ actitedEditMode } >{props.status || '-----'}</div>\r\n            </div>\r\n        }\r\n        { editMode && \r\n            <div>\r\n                <input onChange={ onStatusChange } autoFocus={true} onBlur={ deActivateEditMode } value={status} />\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport C from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst  ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n      return  <Preloader />\r\n    };\r\n\r\n    return  <div>\r\n        <div className={C.discrpBlock}>\r\n            <img src={props.profile.photos.large}/>\r\n            <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Post.module.css'\r\n\r\nconst  Post = (props) => {\r\n    return (\r\n      \r\n      <div>\r\n        <div className={c.item}>{props.Message}</div>\r\n      </div>\r\n      \r\n      )\r\n}\r\n\r\nexport default Post; ","import React from \"react\";\r\nimport c from './MyPosts.module.css'\r\nimport Post from \"./Post\";\r\n\r\n\r\n\r\nconst  MyPost2 = React.memo(props => {\r\n\r\n  let postElements = props.postData\r\n  .map(post => <Post Message={post.message}/>);\r\n\r\n  let newPostElement = React.createRef();\r\n  \r\n  let onAddPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }\r\n\r\n  return (\r\n       <div className={c.PostBlock}>\r\n        \r\n        <h2>My post</h2>\r\n        <div>\r\n          <div>\r\n            <textarea onChange={ onPostChange } ref={ newPostElement } value={ props.newPostText } />\r\n          </div>\r\n          <div>\r\n            <button onClick={ onAddPost }>Add post</button>\r\n          </div>\r\n        </div>\r\n\r\n     <div className={c.posts}>\r\n     { postElements }\r\n     </div>\r\n    \r\n    </div>\r\n    )\r\n})\r\n\r\nexport default MyPost2;","import MyPost2 from \"./MyPosts2\"\r\nimport React from \"react\";\r\nimport { addPostCreator, updateNewPostTextCreator } from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePages.postData,\r\n        newPostText: state.profilePages.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost2);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport c from './Profile.module.css'\r\n\r\nimport ProfileInfo from \"./ProfileItem/ProfileInfo\";\r\nimport MyPostContainer from \"./MypostsDir/MyPostCotainer\";\r\n\r\nconst  Profile = (props) => {\r\n    return  <div >\r\n    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n    <MyPostContainer store={props.store}/>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, updateStatus, getStatus } from \"../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n    return(props)=>{\r\n\r\n       const match  = {params: useParams()};\r\n       return <Children {...props}  match = {match}/>\r\n   }\r\n }\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 29025;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if  (prevProps.status !== this.props.status) {\r\n        this.setState({status: this.props.state})\r\n    }\r\n        let a = this.state;\r\n        let b = this.props;\r\n    }\r\n\r\n    render() {\r\n       \r\n            return (\r\n           <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePages.profile,\r\n    status: state.profilePages.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n    \r\n \r\n"],"sourceRoot":""}