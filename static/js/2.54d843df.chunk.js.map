{"version":3,"sources":["componets/Profile/ProfileItem/ProfileInfo.module.css","componets/Profile/MypostsDir/MyPosts.module.css","componets/Profile/MypostsDir/Post.module.css","componets/Profile/ProfileItem/ProfileStatusWithHooks.jsx","componets/Profile/ProfileItem/ProfileForm.jsx","componets/Profile/ProfileItem/ProfileInfo.jsx","componets/Profile/MypostsDir/Post.jsx","componets/Profile/MypostsDir/MyPosts2.jsx","componets/Profile/MypostsDir/MyPostCotainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx"],"names":["module","exports","discrpBlock","statusStyle","statusText","mainPhoto","mainLoadPhoto","inputPhoto","contact","PostBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","React","createElement","className","C","f","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileForm","_useForm","useForm","register","handleSubmit","onSubmit","data","saveProfile","console","log","Object","assign","required","maxLength","placeholder","type","keys","profile","contacts","map","key","ProfileData","_ref","isOwner","onClick","fullName","lookingForAJob","aboutMe","Contact","contactTitle","contactValue","_ref2","connect","Preloader","src","photos","large","userPhoto","target","files","length","savePhoto","Post","c","Message","MyPost2","memo","postElements","postData","post","message","newPostElement","createRef","text","current","updateNewPostText","ref","newPostText","addPost","MyPostContainer","state","profilePages","dispatch","action","updateNewPostTextCreator","addPostCreator","Profile","ProfileInfo","store","withRouter","Children","match","params","useParams","ProfileContainer","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","userId","getUserProfile","getStatus","refresh","prevProps","prevState","Component","compose"],"mappings":"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","file":"static/js/2.54d843df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discrpBlock\":\"ProfileInfo_discrpBlock__3kWsN\",\"statusStyle\":\"ProfileInfo_statusStyle__uF7lG\",\"statusText\":\"ProfileInfo_statusText__1Ls0o\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Nt-t\",\"mainLoadPhoto\":\"ProfileInfo_mainLoadPhoto__vPNx_\",\"inputPhoto\":\"ProfileInfo_inputPhoto__2UShk\",\"contact\":\"ProfileInfo_contact__2-Jbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__jEtAp\",\"posts\":\"MyPosts_posts__2LCOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__353Ya\"};","import React, { useEffect, useState } from \"react\";\r\nimport C from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect( () => {\r\n    setStatus(props.status)\r\n   }, [props.status])\r\n  \r\n   const actitedEditMode = () => {\r\n    setEditMode(true)\r\n   };\r\n\r\n   const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n   };\r\n\r\n   const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n   };\r\n\r\n    return  (\r\n    <div className={C.f}>\r\n        { !editMode && \r\n            <div className={C.statusStyle}>\r\n              <h4>Status:</h4>  <div className={C.statusText} onDoubleClick={ actitedEditMode } >{props.status || 'Отсутствует'}</div>\r\n            </div>\r\n        }\r\n        { editMode && \r\n            <div>\r\n                <input onChange={ onStatusChange } autoFocus={true} onBlur={ deActivateEditMode } value={status} />\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport C from './ProfileInfo.module.css';\r\n\r\nconst ProfileForm = (props) => {\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = data => {\r\n      props.saveProfile(data)\r\n      console.log(data)\r\n      props.setEditMode()\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)}>\r\n     <div>\r\n         <b>Full name</b> <div>{ <input {...register(\"fullName\", {required: true, maxLength: 40})} placeholder={\"Name\"} /> }</div> \r\n     </div>\r\n    \r\n    <div>\r\n     <b> Looking for a job: </b> <div> { <input {...register(\"lookingForAJob\")} type={\"checkbox\"} />} </div> \r\n    </div>\r\n    \r\n    <div>\r\n    <b> About me </b> <div> { <textarea {...register(\"aboutMe\")}  />} </div> \r\n    </div>\r\n \r\n    <div>\r\n     <input type=\"submit\" />\r\n    </div>\r\n        \r\n        <div>\r\n            <b>Contacts</b>:  {Object.keys(props.profile.contacts)\r\n            .map( key => {\r\n                return (<div className={C.contact}>\r\n                    <b>{key}:</b> <div> <input {...register(\"contacts.\" + key)} placeholder={key}/> </div> \r\n                </div>)\r\n            })}\r\n        </div>\r\n \r\n </form>\r\n};\r\n\r\nexport default ProfileForm","import React, { useState } from \"react\";\r\nimport C from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assts/img/interact.png';\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport { saveProfile } from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst  ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n      return  <Preloader />\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return  <div>\r\n        <div className={C.discrpBlock}>\r\n            <img className={C.mainPhoto} src={props.profile.photos.large || userPhoto}/>\r\n            { props.isOwner && <div className={C.mainLoadPhoto}>\r\n            <h4>Загрузить фото профиля</h4>\r\n            <div> { props.isOwner && <input className={C.inputPhoto} type=\"file\" onChange={ onMainPhotoSelected } /> }</div>\r\n            </div>}\r\n            { editMode ? <ProfileForm saveProfile={ props.saveProfile } profile={ props.profile }\r\n            setEditMode={ () => setEditMode(false)} />\r\n            : <ProfileData profile={ props.profile } setEditMode={ () => setEditMode(true)} isOwner={props.isOwner} />  }\r\n        \r\n\r\n            <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, setEditMode}) => {\r\n   return <div>\r\n   { isOwner && <div> <button onClick={setEditMode}>EDIT</button></div>}\r\n    <div>\r\n        <b>Full name</b> {profile.fullName}\r\n    </div>\r\n   \r\n   <div>\r\n    <b> Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n   </div>\r\n   \r\n   <div>\r\n   <b> About me </b>  {profile.aboutMe}\r\n   </div>\r\n\r\n   <div>\r\n   <b> Contacts </b>  {Object.keys(profile.contacts).map( key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n   })}\r\n   </div>\r\n\r\n</div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={C.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {saveProfile})(ProfileInfo);","import React from \"react\";\r\nimport c from './Post.module.css'\r\n\r\nconst  Post = (props) => {\r\n    return (\r\n      \r\n      <div>\r\n        <div className={c.item}>{props.Message}</div>\r\n      </div>\r\n      \r\n      )\r\n}\r\n\r\nexport default Post; ","import React from \"react\";\r\nimport c from './MyPosts.module.css'\r\nimport Post from \"./Post\";\r\n\r\n\r\n\r\nconst  MyPost2 = React.memo(props => {\r\n\r\n  let postElements = props.postData\r\n  .map(post => <Post Message={post.message}/>);\r\n\r\n  let newPostElement = React.createRef();\r\n  \r\n  let onAddPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }\r\n\r\n  return (\r\n       <div className={c.PostBlock}>\r\n        \r\n        <h2>My post</h2>\r\n        <div>\r\n          <div>\r\n            <textarea onChange={ onPostChange } ref={ newPostElement } value={ props.newPostText } />\r\n          </div>\r\n          <div>\r\n            <button onClick={ onAddPost }>Add post</button>\r\n          </div>\r\n        </div>\r\n\r\n     <div className={c.posts}>\r\n     { postElements }\r\n     </div>\r\n    \r\n    </div>\r\n    )\r\n})\r\n\r\nexport default MyPost2;","import MyPost2 from \"./MyPosts2\"\r\nimport React from \"react\";\r\nimport { addPostCreator, updateNewPostTextCreator } from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePages.postData,\r\n        newPostText: state.profilePages.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost2);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileItem/ProfileInfo\";\r\nimport MyPostContainer from \"./MypostsDir/MyPostCotainer\";\r\n\r\nconst  Profile = (props) => {\r\n    return  <div >\r\n    <ProfileInfo profile={props.profile} isOwner={props.isOwner}\r\n     status={props.status} updateStatus={props.updateStatus}\r\n     savePhoto={props.savePhoto} />\r\n    \r\n    <MyPostContainer store={props.store}/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto } from \"../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n    return(props)=>{\r\n\r\n       const match  = {params: useParams()};\r\n       return <Children {...props}  match = {match}/>\r\n   }\r\n }\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refresh() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 29025;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != this.props.match.params.userId){\r\n        this.refresh(); \r\n    }\r\n    }\r\n\r\n    render() {\r\n       \r\n            return (\r\n           <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n           profile={this.props.profile} \r\n           status={this.props.status} \r\n           updateStatus={this.props.updateStatus}\r\n           savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePages.profile,\r\n    status: state.profilePages.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n    \r\n \r\n"],"sourceRoot":""}